<?php
/**
 * @file
 * Integrates 2Checkout.com's redirected payment service.
 */

/**
 * Implements hook_menu().
 */
function uc_2checkout_menu() {
  $items = array();

  $items['cart/2checkout/complete'] = array(
    'title' => 'Order complete',
    'page callback' => 'uc_2checkout_complete',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'uc_2checkout.pages.inc',
  );
  $items['cart/2checkout/notification'] = array(
    'page callback' => 'uc_2checkout_process_notification',
    'access callback' => TRUE,
    'file' => 'uc_2checkout.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_ucga_display().
 */
function uc_2checkout_ucga_display() {
  // Tell UC Google Analytics to display the e-commerce JS on the custom
  // order completion page for this module.
  if (arg(0) == 'cart' && arg(1) == '2checkout' && arg(2) == 'complete') {
    return TRUE;
  }
}

/**
 * Implements hook_config_info().
 */
function uc_2checkout_config_info() {
  $prefixes['uc_2checkout.settings'] = array(
    'label' => t('Ubercart 2Checkout settings'),
    'group' => t('Configuration'),
  );

  return $prefixes;
}

/**
 * Implements hook_uc_payment_method().
 *
 * @see uc_payment_method_2checkout()
 */
function uc_2checkout_uc_payment_method() {
  $config = config('uc_2checkout.settings');
  $path = base_path() . backdrop_get_path('module', 'uc_2checkout');
  $title = $config->get('uc_2checkout_method_title');
  $title .= '<br />' . theme('image', array(
    'path' => backdrop_get_path('module', 'uc_2checkout') . '/2co_logo.jpg',
    'attributes' => array('class' => array('uc-2checkout-logo')),
  ));

  $methods['2checkout'] = array(
    'name' => t('2Checkout'),
    'title' => $title,
    'review' => $config->get('uc_2checkout_check') ? t('Credit card/eCheck') : t('Credit card'),
    'desc' => t('Redirect to 2Checkout to pay by credit card or eCheck.'),
    'callback' => 'uc_payment_method_2checkout',
    'redirect' => 'uc_2checkout_form',
    'weight' => 3,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );

  return $methods;
}

/**
 * Adds 2Checkout settings to the payment method settings form.
 *
 * @see uc_2checkout_uc_payment_method()
 */
function uc_payment_method_2checkout($op, &$order, $form = NULL, &$form_state = NULL) {
  $config = config('uc_2checkout.settings');
  switch ($op) {
    case 'cart-details':
      $build = array();

      if ($config->get('uc_2checkout_check')) {
        $build['pay_method'] = array(
          '#type' => 'select',
          '#title' => t('Select your payment type:'),
          '#default_value' => $_SESSION['pay_method'] == 'CK' ? 'CK' : 'CC',
          '#options' => array(
            'CC' => t('Credit card'),
            'CK' => t('Online check'),
          ),
        );
        unset($_SESSION['pay_method']);
      }

      return $build;

    case 'cart-process':
      if (isset($form_state['values']['panes']['payment']['details']['pay_method'])) {
        $_SESSION['pay_method'] = $form_state['values']['panes']['payment']['details']['pay_method'];
      }
      return;

    case 'settings':
      $form['#config'] = 'uc_2checkout.settings';
      $form['uc_2checkout_sid'] = array(
        '#type' => 'textfield',
        '#title' => t('Vendor account number'),
        '#description' => t('Your 2Checkout vendor account number.'),
        '#default_value' => $config->get('uc_2checkout_sid'),
        '#size' => 16,
      );
      $form['uc_2checkout_secret_word'] = array(
        '#type' => 'textfield',
        '#title' => t('Secret word for order verification'),
        '#description' => t('The secret word entered in your 2Checkout account Look and Feel settings.'),
        '#default_value' => $config->get('uc_2checkout_secret_word'),
        '#size' => 16,
      );
      $form['uc_2checkout_demo'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enable demo mode, allowing you to process fake orders for testing purposes.'),
        '#default_value' => $config->get('uc_2checkout_demo'),
      );
      $form['uc_2checkout_language'] = array(
        '#type' => 'select',
        '#title' => t('Language preference'),
        '#description' => t('Adjust language on 2Checkout pages.'),
        '#options' => array(
          'en' => t('English'),
          'sp' => t('Spanish'),
        ),
        '#default_value' => $config->get('uc_2checkout_language'),
      );
      $form['uc_2checkout_currency_code'] = array(
        '#type' => 'select',
        '#title' => t('Currency for the sale'),
        '#options' => array(
          '' => t('Auto detected by 2CO'),
          'USD',
          'EUR',
          'ARS',
          'AUD',
          'BRL',
          'GBP',
          'CAD',
          'DKK',
          'HKD',
          'INR',
          'ILS',
          'JPY',
          'LTL',
          'MYR',
          'MXN',
          'NZD',
          'NOK',
          'PHP',
          'RON',
          'RUB',
          'SGD',
          'ZAR',
          'SEK',
          'CHF',
          'TRY',
          'AED',
        ),
        '#default_value' => $config->get('uc_2checkout_currency_code'),
      );
      $form['uc_2checkout_check'] = array(
        '#type' => 'checkbox',
        '#title' => t('Allow customers to choose to pay by credit card or online check.'),
        '#default_value' => $config->get('uc_2checkout_check'),
      );
      $form['uc_2checkout_method_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Payment method title'),
        '#default_value' => $config->get('uc_2checkout_method_title'),
      );
      $form['uc_2checkout_checkout_type'] = array(
        '#type' => 'radios',
        '#title' => t('Checkout type'),
        '#options' => array(
          'dynamic' => t('Dynamic checkout (user is redirected to 2CO)'),
          'direct' => t('Direct checkout (payment page opens in iframe popup)'),
        ),
        '#default_value' => $config->get('uc_2checkout_checkout_type'),
      );
      $form['uc_2checkout_notification_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Instant notification settings URL'),
        '#description' => t('Pass this URL to the <a href="@help_url">instant notification settings</a> parameter in your 2Checkout account. This way, any refunds or failed fraud reviews will automatically cancel the Ubercart order.', array('@help_url' => 'https://www.2checkout.com/static/va/documentation/INS/index.html')),
        '#default_value' => url('cart/2checkout/notification', array('absolute' => TRUE)),
        '#attributes' => array('readonly' => 'readonly'),
      );
      return $form;
  }
}

/**
 * Form to build the submission to 2Checkout.com.
 */
function uc_2checkout_form($form, &$form_state, $order) {
  $config = config('uc_2checkout.settings');
  $country = uc_get_country_data(array('country_id' => $order->billing_country));
  if ($country === FALSE) {
    $country = array(0 => array('country_iso_code_3' => 'USA'));
  }

  $data = array(
    'sid' => $config->get('uc_2checkout_sid'),
    'mode' => '2CO',
    'card_holder_name' => backdrop_substr($order->billing_first_name . ' ' . $order->billing_last_name, 0, 128),
    'street_address' => backdrop_substr($order->billing_street1, 0, 64),
    'street_address2' => backdrop_substr($order->billing_street2, 0, 64),
    'city' => backdrop_substr($order->billing_city, 0, 64),
    'state' => uc_get_zone_code($order->billing_zone),
    'zip' => backdrop_substr($order->billing_postal_code, 0, 16),
    'country' => $country[0]['country_iso_code_3'],
    'email' => backdrop_substr($order->primary_email, 0, 64),
    'phone' => backdrop_substr($order->billing_phone, 0, 16),
    'purchase_step' => 'payment-method',
    'demo' => $config->get('uc_2checkout_demo') ? 'Y' : 'N',
    'lang' => $config->get('uc_2checkout_language'),
    'merchant_order_id' => $order->order_id,
    'pay_method' => 'CC',
    'x_receipt_link_url' => url('cart/2checkout/complete/' . uc_cart_get_id(), array('absolute' => TRUE)),
    'total' => uc_currency_format($order->order_total, FALSE, FALSE, '.'),
    'cart_order_id' => $order->order_id,
  );

  if ($currency_code = $config->get('uc_2checkout_currency_code')) {
    $data['currency_code'] = $currency_code;
  }

  $i = 0;
  foreach ($order->products as $product) {
    $i++;
    $data['li_' . $i . '_name'] = $product->title;
    $data['li_' . $i . '_price'] = uc_currency_format($product->price, FALSE, FALSE, '.');
  }

  if ($config->get('uc_2checkout_checkout_type') == 'direct') {
    $form['#suffix'] = '<script src="https://www.2checkout.com/static/checkout/javascript/direct.min.js"></script>';
  }

  $form['#action'] = $config->get('uc_2checkout_server_url');

  foreach ($data as $name => $value) {
    $form[$name] = array(
      '#type' => 'hidden',
      '#value' => $value,
    );
  }

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit order'),
  );

  return $form;
}
