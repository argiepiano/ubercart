<?php
/**
 * @file
 * Install, update and uninstall functions for the uc_catalog module.
 */

/**
 * Implements hook_enable().
 */
function uc_catalog_enable() {
  foreach (uc_product_types() as $type) {
    uc_catalog_add_node_type($type);
  }
  uc_catalog_add_image_field();
}

/**
 * Implements hook_update_last_removed().
 */
function uc_catalog_update_last_removed() {
  return 7006;
}

/**
 * Convert Ubercart Catalog settings to config.
 */
function uc_catalog_update_1000() {
  $config = config('uc_catalog.settings');
  $config->set('uc_catalog_display', update_variable_get('uc_catalog_display', 'catalog'));
  //TODO update D7 uc_catalog_vid to Bd uc_catalog_vocabulary
  $config->set('uc_catalog_vocabulary', update_variable_get('uc_catalog_vocabulary', ''));
  $config->set('uc_catalog_breadcrumb', update_variable_get('uc_catalog_breadcrumb', TRUE));
  $config->set('uc_catalog_block_title', update_variable_get('uc_catalog_block_title', FALSE));
  $config->set('uc_catalog_expand_categories', update_variable_get('uc_catalog_expand_categories', FALSE));
  $config->set('uc_catalog_block_nodecount', update_variable_get('uc_catalog_block_nodecount', TRUE));

  $config->save();

  update_variable_del('uc_catalog_display');
  update_variable_del('uc_catalog_vocabulary');
  update_variable_del('uc_catalog_breadcrumb');
  update_variable_del('uc_catalog_block_title');
  update_variable_del('uc_catalog_expand_categories');
  update_variable_del('uc_catalog_block_nodecount');
}

/**
 * Convert catalog image styles to CMI.
 */
function uc_catalog_update_1001() {
  // Check category image style.
  $config = config('image.style.uc_category');
  if (!empty($config->get('name')) && empty($config->get('module'))) {
    $config->set('module', 'uc_catalog');
  }
  else {
    $data = array(
      "label" => "Category image",
      "name" => "uc_category",
      "storage" => 4,
      "module" => "uc_catalog",
      "effects" => array(
        array(
          "name" => "image_scale",
          "data" => array(
            "width" => "100",
            "height" => "100",
            "upscale" => 0,
          ),
          "weight" => 1,
        ),
      ),
    );
    $config->setData($data);
    $config->save();
  }
}

/**
 * Fix defective vocabulary filter in view uc_catalog_terms 
 */
function uc_catalog_update_1002() {
  $view_config = config('views.view.uc_catalog_terms');
  $vocabulary_setting = $view_config->get('display.default.display_options.filters.vocabulary.value');
  if (reset($vocabulary_setting) == 0) {
    $view_config->set('display.default.display_options.filters.vocabulary.value', array('catalog' => 'catalog'));
  }
  $view_config->save();
}

/**
 * Move settings for uc_catalog blocks into the root of $block->settings.
 */
function uc_catalog_update_1003() {
  $layouts = layout_load_all();
  foreach ($layouts as $layout) {
    $changed = FALSE;
    foreach ($layout->content as $block) {
      if ($block->plugin == 'uc_catalog:catalog') {
        if (!empty($block->settings['block_settings'])) {
          foreach ($block->settings['block_settings'] as $key => $value) {
            $block->settings[$key] = $value;
          }
          unset($block->settings['block_settings']);
          $changed = TRUE;
        }
      }
    }
    if ($changed) {
      $layout->save();
    }
  }
}

/**
 * Remove the unused taxonomy_maintain_index_table variable from uc_catalog config.
 */
function uc_catalog_update_1004() {
  config_clear('uc_catalog.settings', 'taxonomy_maintain_index_table');
}

/**
 * Implements hook_uninstall().
 */
function uc_catalog_uninstall() {
  backdrop_set_message(t('The Ubercart Catalog vocabulary has not been deleted. If you need to delete it, <a href="@url">please do so manually</a>.', array('@url' => url('admin/structure/taxonomy/'))), 'warning');
}
